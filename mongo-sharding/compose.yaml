version: '3'

services:
  # Сервер конфигурации
  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.18.0.10
    volumes:
      - config-data:/data/db
    entrypoint: ["/bin/bash", "-c", "mongod --configsvr --replSet config_server --bind_ip_all --port 27017"]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  # 1-й шард
  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.18.0.9
    volumes:
      - shard1-data:/data/db
    entrypoint: ["/bin/bash", "-c", "mongod --shardsvr --replSet shard1 --bind_ip_all --port 27018"]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  # 2-й шард
  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.18.0.8
    volumes:
      - shard2-data:/data/db
    entrypoint: ["/bin/bash", "-c", "mongod --shardsvr --replSet shard2 --bind_ip_all --port 27019"]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  # Роутер
  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.18.0.7
    command: ["/bin/bash", "-c", "mongos --configdb config_server/configSrv:27017 --bind_ip_all --port 27020"]
    depends_on:
      - configSrv
      - shard1
      - shard2
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  # PyMongo API
  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
    networks:
      app-network:
        ipv4_address: 173.18.0.5

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.18.0.0/16

volumes:
  config-data:
  shard1-data:
  shard2-data: